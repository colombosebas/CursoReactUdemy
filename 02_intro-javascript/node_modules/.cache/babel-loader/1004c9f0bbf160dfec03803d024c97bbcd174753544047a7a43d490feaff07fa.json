{"ast":null,"code":"// const getImagenPromesa = () => new Promise((resolve) => resolve('htpps://asdasdasdasdasd'))\n// getImagenPromesa().then(console.log);\n\nconst getImage = async () => {\n  try {\n    const apiKey = '1tSLujvNvQMzEBQnDO29W0Gtc4LKNsjh';\n    const resp = await fetch(`https://api.giphy.com/v1/gifs/random?api_key=${apiKey}`);\n    const {\n      data\n    } = await resp.json();\n    const {\n      url\n    } = data.images.original;\n    const img = document.createElement('img');\n    img.src = url;\n    document.body.append(img);\n  } catch (error) {\n    console.error(error);\n  }\n};\ngetImage();","map":{"version":3,"names":["getImage","apiKey","resp","fetch","data","json","url","images","original","img","document","createElement","src","body","append","error","console"],"sources":["C:/Seba/CursosEjercicios/CursoReact/02_intro-javascript/src/index.js"],"sourcesContent":["// const getImagenPromesa = () => new Promise((resolve) => resolve('htpps://asdasdasdasdasd'))\r\n// getImagenPromesa().then(console.log);\r\n\r\nconst getImage = async() => {\r\n    try{\r\n        const apiKey = '1tSLujvNvQMzEBQnDO29W0Gtc4LKNsjh';\r\n        const resp = await fetch(`https://api.giphy.com/v1/gifs/random?api_key=${apiKey}`);\r\n        const {data} = await resp.json();\r\n        const {url} = data.images.original;\r\n        const img = document.createElement('img');\r\n        img.src = url;\r\n        document.body.append(img);\r\n    }\r\n    catch(error){\r\n        console.error(error)\r\n    }\r\n}\r\ngetImage();\r\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAW;EACxB,IAAG;IACC,MAAMC,MAAM,GAAG,kCAAkC;IACjD,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,gDAA+CF,MAAO,EAAC,CAAC;IAClF,MAAM;MAACG;IAAI,CAAC,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;IAChC,MAAM;MAACC;IAAG,CAAC,GAAGF,IAAI,CAACG,MAAM,CAACC,QAAQ;IAClC,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACzCF,GAAG,CAACG,GAAG,GAAGN,GAAG;IACbI,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACL,GAAG,CAAC;EAC7B,CAAC,CACD,OAAMM,KAAK,EAAC;IACRC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;AACDf,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}